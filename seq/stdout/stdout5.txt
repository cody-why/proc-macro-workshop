STDOUT:
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
SeqParser {
    name: Ident {
        ident: "N",
        span: #0 bytes(1092..1093),
    },
    start: 0,
    end: 16,
    body: TokenStream [
        Punct {
            ch: '#',
            spacing: Alone,
            span: #0 bytes(1109..1110),
        },
        Group {
            delimiter: Bracket,
            stream: TokenStream [
                Ident {
                    ident: "derive",
                    span: #0 bytes(1111..1117),
                },
                Group {
                    delimiter: Parenthesis,
                    stream: TokenStream [
                        Ident {
                            ident: "Copy",
                            span: #0 bytes(1118..1122),
                        },
                        Punct {
                            ch: ',',
                            spacing: Alone,
                            span: #0 bytes(1122..1123),
                        },
                        Ident {
                            ident: "Clone",
                            span: #0 bytes(1124..1129),
                        },
                        Punct {
                            ch: ',',
                            spacing: Alone,
                            span: #0 bytes(1129..1130),
                        },
                        Ident {
                            ident: "PartialEq",
                            span: #0 bytes(1131..1140),
                        },
                        Punct {
                            ch: ',',
                            spacing: Alone,
                            span: #0 bytes(1140..1141),
                        },
                        Ident {
                            ident: "Debug",
                            span: #0 bytes(1142..1147),
                        },
                    ],
                    span: #0 bytes(1117..1148),
                },
            ],
            span: #0 bytes(1110..1149),
        },
        Ident {
            ident: "enum",
            span: #0 bytes(1154..1158),
        },
        Ident {
            ident: "Interrupt",
            span: #0 bytes(1159..1168),
        },
        Group {
            delimiter: Brace,
            stream: TokenStream [
                Punct {
                    ch: '#',
                    spacing: Alone,
                    span: #0 bytes(1179..1180),
                },
                Group {
                    delimiter: Parenthesis,
                    stream: TokenStream [
                        Ident {
                            ident: "Irq",
                            span: #0 bytes(1194..1197),
                        },
                        Punct {
                            ch: '~',
                            spacing: Alone,
                            span: #0 bytes(1197..1198),
                        },
                        Ident {
                            ident: "N",
                            span: #0 bytes(1198..1199),
                        },
                        Punct {
                            ch: ',',
                            spacing: Alone,
                            span: #0 bytes(1199..1200),
                        },
                    ],
                    span: #0 bytes(1180..1210),
                },
                Punct {
                    ch: '*',
                    spacing: Alone,
                    span: #0 bytes(1210..1211),
                },
            ],
            span: #0 bytes(1169..1217),
        },
    ],
}
┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
